openapi: "3.0.0"
info:
  title: "Not Chocolatine API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
paths:
    /users/{userId}:
        get:
            summary: "Get user by id"
            operationId: "getUserbyId"
            parameters:
                - name: "userId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "User found"
                    content:
                        application/json:
                            schema:
                                type: $ref: '#/components/schemas/User'
                                
                '404':
                    description: "User not found"
                '500':
                    description: "Internal server error"

    /users:
        get:
            summary: "Get all users"
            operationId: "getUsers"
            responses:
                '200':
                    description: "Users found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/User'
                                    
                '404':
                    description: "Users not found"
                '500':
                    description: "Internal server error"
    
    /users: 
        post:
            summary: "Add user"
            operationId: "addUser"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: $ref: '#/components/schemas/User'
                                
            responses:
                '201':
                    description: "User added"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"
    
    /users/{userId}:
        delete:
            summary: "Delete user"
            operationId: "deleteUser"
            parameters:
                - name: "userId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "User deleted"
                '404':
                    description: "User not found"
                '500':
                    description: "Internal server error"
    
    /users/{userId}: 
        put:
            summary: "Update user"
            operationId: "updateUser"
            parameters:
                - name: "userId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: $ref: '#/components/schemas/User'
            responses:
                '200':
                    description: "User updated"
                '404':
                    description: "User not found"
                '500':
                    description: "Internal server error"
    
    /reviews:
        get:
            summary: "Get all reviews"
            operationId: "getReviews"
            responses:
                '200':
                    description: "Reviews found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/Review'
                '404':
                    description: "Reviews not found"
                '500':
                    description: "Internal server error"
    
    /reviews/{reviewId}:
        get:
            summary: "Get review by id"
            operationId: "getReviewbyId"
            parameters:
                - name: "reviewId"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
            responses:
                '200':
                    description: "Review found"
                    content:
                        application/json:
                            schema:
                                type: $ref: '#/components/schemas/Review'
                '404':
                    description: "Review not found"
                '500':
                    description: "Internal server error"

    /reviews/byProduct/{productId}:
        get:
            summary: "Get reviews by product"
            operationId: "getReviewsByProduct"
            parameters:
                - name: "productId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Reviews found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/Review'
                '404':
                    description: "Reviews not found"
                '500':
                    description: "Internal server error"

    /reviews/byUser/{userId}:
        get:
            summary: "Get reviews by user"
            operationId: "getReviewsByUser"
            parameters:
                - name: "userId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Reviews found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/Review'
                '404':
                    description: "Reviews not found"
                '500':
                    description: "Internal server error"

    /reviews:
        post:
            summary: "Add review"
            operationId: "addReview"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: $ref: '#/components/schemas/Review'
            responses:
                '201':
                    description: "Review added"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"
    
    /reviews/{reviewId}:
        delete:
            summary: "Delete review"
            operationId: "deleteReview"
            parameters:
                - name: "reviewId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Review deleted"
                '404':
                    description: "Review not found"
                '500':
                    description: "Internal server error"

    /products/{productId} :
        get:
            summary: "Get product by id"
            operationId: "getProductbyId"
            parameters:
                - name: "productId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Product found"
                    content:
                        application/json:
                            schema:
                                type: $ref: '#/components/schemas/Product'
                '404':
                    description: "Product not found"
                '500':
                    description: "Internal server error"

    /products:
        get:
            summary: "Get all products"
            operationId: "getProducts"
            responses:
                '200':
                    description: "Products found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/Product'
                '404':
                    description: "Product not found"
                '500':
                    description: "Internal server error"

    /products: 
        post:
            summary: "Add product"
            operationId: "addProduct"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: $ref: '#/components/schemas/Product'
            responses:
                '201':
                    description: "Product added"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"

    /products/{productId}: 
        put:
            summary: "Update product"
            operationId: "updateProduct"
            parameters:
                - name: "productId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: $ref: '#/components/schemas/Product'
            responses:
                '201':
                    description: "Product updated"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"  

    /products/{productId}:
        delete:
            summary: "Delete product"
            operationId: "deleteProduct"
            parameters:
                - name: "id"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Product deleted"
                '404':
                    description: "Product not found"
                '500':
                    description: "Internal server error"

    /orders:
        get:
            summary: "Get all orders"
            operationId: "getOrders"
            responses:
                '200':
                    description: "Orders found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/Order'
                '404':
                    description: "Orders not found"
                '500':
                    description: "Internal server error"
    
    /orders/{orderId}:
        get:
            summary: "Get order by id"
            operationId: "getOrderbyId"
            parameters:
                - name: "orderId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Order found"
                    content:
                        application/json:
                            schema:
                                type: $ref: '#/components/schemas/Order'
                '404':
                    description: "Order not found"
                '500':
                    description: "Internal server error"
    
    /orders/byUser/{userId}:
        get:
            summary: "Get orders by user"
            operationId: "getOrdersByUser"
            parameters:
                - name: "userId"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
            responses:
                '200':
                    description: "Orders found"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: $ref: '#/components/schemas/Order'
                '404':
                    description: "Orders not found"
                '500':
                    description: "Internal server error"

    /orders:   
        post:
            summary: "Add order"
            operationId: "addOrder"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: $ref: '#/components/schemas/Order'
            responses:
                '201':
                    description: "Order added"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"

    /orders/{orderId}: 
        delete:
            summary: "Delete order"
            operationId: "deleteOrder"
            parameters:
                - name: "orderId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Order deleted"
                '404':
                    description: "Order not found"
                '500':
                    description: "Internal server error"
    
    /orders/{orderId}/product/{productId}:
        post:
            summary: "Add product to order"
            operationId: "addProductToOrder"
            parameters:
                - name: "orderId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
                - name: "productId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
                - quantity:
                    in: "body"
                    required: true
                    schema:
                        type: "integer"
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: "array"
                                content:
                                    order:
                                        type: $ref: '#/components/schemas/Order'
                                    product:
                                        type: $ref: '#/components/schemas/Product'
                                    quantity:
                                        type: "integer"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"
    
    /orders/{orderId}/product/{productId}:
        delete:
            summary: "Delete product from order"
            operationId: "deleteProductFromOrder"
            parameters:
                - name: "orderId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
                - name: "productId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
            responses:
                '200':
                    description: "Product deleted from order"
                '404':
                    description: "Product not found in order"
                '500':
                    description: "Internal server error"
    
    /orders/{orderId}/product/{productId}:
        put:
            summary: "Update product quantity in order"
            operationId: "updateProductQuantityInOrder"
            parameters:
                - name: "orderId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
                - name: "productId"
                  in: "query"
                  required: true
                  schema:
                      type: "string"
                - quantity:
                    in: "body"
                    required: true
                    schema:
                        type: "integer"
            responses:
                '200':
                    description: "Product quantity updated in order"
                '404':
                    description: "Product not found in order"
                '500':
                    description: "Internal server error"

    /auth/login:
        post:
            summary: "Login"
            operationId: "login"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                mail:
                                    type: "string"
                                password:
                                    type: "string"
            responses:
                '200':
                    description: "Login success"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    id:
                                        type: "integer"
                                    email:
                                        type: "string"
                                    role:
                                        type: "string"
                                    token:
                                        type: "string"
                '400':
                    description: "Bad request"
                '500':
                    description: "Internal server error"

components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: integer
                mail:
                    type: string
                    format: email
                password:
                    type: string
                role:
                    type: integer
        Product:
            type: object
            properties:
                id:
                    type: integer
                price:
                    type: number
                    format: float
                name:
                    type: string
                description:
                    type: string
        Review:
            type: object
            properties:
                id:
                    type: integer
                comment:
                    type: string
                grade:
                    type: integer
                    minimum: 1
                    maximum: 5
                user:
                    $ref: '#/components/schemas/User'
                product:
                    $ref: '#/components/schemas/Product'
        Order:
            type: object
            properties:
                id:
                    type: integer
                date:
                    type: string
                    format: date
                price:
                    type: number
                    format: float
                userId:
                    type: integer

